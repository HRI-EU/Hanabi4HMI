[tool.poetry]
name = "Hanabi4HMI"
version = "1.1.0"
description = "Server-Client implementation of the Hanabi-Card-Game"
authors = []
readme = "README.md"

packages = [{ include = "hanabi", from = "src" }]
include = [
    { path = "src/hanabi/html/static/**/*", format = "wheel" },
    { path = "hri_build.py", format = "sdist" },
    { path = "src/hanabi-ui/src/**/*", format = "sdist" },
    { path = "src/hanabi-ui/index.html", format = "sdist" },
    { path = "src/hanabi-ui/*.json", format = "sdist" },
    { path = "src/hanabi-ui/vite.config.ts", format = "sdist" },
]

[tool.poetry.scripts]
hanabi = "hanabi.cli:main"

[[tool.poetry.source]]
name = "hri-gitlab"
url = "https://dmz-gitlab.honda-ri.de/api/v4/projects/509/packages/pypi/simple"
priority = "explicit"

[tool.poetry.dependencies]
python = ">=3.8,<3.12"

numpy = [
    { version = "^1.25.0", python = "^3.9" },
    { version = "^1.24.0", python = "~3.8" },
]

flask = "^2.3.2"
eventlet = "^0.33.3"
hanabi-learning-environment = [
    { git = "https://github.com/deepmind/hanabi-learning-environment", markers = "sys_platform != 'win32'" },
    { git = "https://github.com/happynoom/hanabi-learning-environment", markers = "sys_platform == 'win32'" },
]
flask-socketio = "^5.3.4"
torch = "^2.1.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.277"
black = "^23.3.0"
mypy = "^1.3.0"
pre-commit = "^3.3.1"
pytest = "^7.3.1"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
types-flask = "^1.1.6"

[tool.poetry.build]
generate-setup-file = false
script = "hri_build.py"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line_length = 120

[tool.pylint.basic]
good-names = [
  "a", "c", "l", "m", "i",  # iterators
  "e",  # errors
  "_", "__", # unneeded variable
]

[tool.mypy]
python_version = "3.8"
files = "src"
exclude = ["src/hanabi/agents/external/*"]

strict = true

warn_return_any = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true

disallow_untyped_defs = true
no_implicit_optional = true

show_error_context = true
show_error_codes = true
show_column_numbers = true
pretty = true

enable_error_code = ["ignore-without-code"]

[[tool.mypy.overrides]]
module = ["hanabi_learning_environment.*", "flask_socketio.*"]
ignore_missing_imports = true

[tool.ruff]
select = ["ALL"]
ignore = [
    "D1",      # docstrings
    "D203",    # one-blank-line-before-class
    "D212",    # multi-line-summary-first-line
    "ERA001",  # Commented out code found
    "PLC0414", # useless import alias
    "TCH",     # type checking blocks
    "ANN10",   # typing self and cls
    "FIX002",  # TODOs anywhere in comments
    "TD003",   # issue link for all TODOs
]

line-length = 120
target-version = "py38"

[tool.ruff.per-file-ignores]
"src/*" = ["PT"] # pytest rule set
"tests/*" = [
    "D1",   # docstrings
    "T20",  # print detection
    "S101", # `assert` detected
]
"pkgInfo.py" = [
    "D100", # public docstring
    "N816", # mixed case variables
]
"src/hanabi/agents/external/*" = ["ALL"]

[tool.ruff.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["rosenv"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"
